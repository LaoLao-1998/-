import torch
from torch import nn
from torchsummary import summary
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

class Net_test(nn.Module):
    def __init__(self):
        super(Net_test, self).__init__()
        self.conv_1 = nn.Conv2d(3, 6, 3)
        self.add_module('conv_2', nn.Conv2d(6, 12, 3))
        self.conv_3 = nn.Conv2d(12, 24, 3)

    def forward(self, x):
        x = self.conv_1(x)
        x = self.conv_2(x)
        x = self.conv_3(x)
        return x


model = Net_test()
print(model)

summary(model, input_size=(3,2566,256)) #summary(your_model, input_size=(channels, H, W))

#
#info 分析
#每一层的类型、shape 和 参数量
#模型整体的参数量
#模型大小，和 fp/bp 一次需要的内存大小，可以用来估计最佳 batch_size
